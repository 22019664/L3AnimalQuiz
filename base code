import React, { useState } from 'react';
import { Text, View, Image, Alert, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';
import RNPickerSelect from 'react-native-picker-select';

const questions = [
  {
    id: 1,
    image: require('./img/zebra.jpg'),
    options: [
      { label: 'Zebra', value: 'Zebra' },
      { label: 'Tiger', value: 'Tiger' },
      { label: 'Elephant', value: 'Elephant' },
    ],
    correctAnswer: 'Zebra',
  },
  {
    id: 2,
    image: require('./img/elephant.jpg'),
    options: [
      { label: 'Giraffe', value: 'Giraffe' },
      { label: 'Elephant', value: 'Elephant' },
      { label: 'Zebra', value: 'Zebra' },
    ],
    correctAnswer: 'Elephant',
  },
  {
    id: 3,
    image: require('./img/tiger.jpg'),
    options: [
      { label: 'Tiger', value: 'Tiger' },
      { label: 'Bear', value: 'Bear' },
      { label: 'Wolf', value: 'Wolf' },
    ],
    correctAnswer: 'Tiger',
  },
];

export default function App() {
  const [answers, setAnswers] = useState(Array(questions.length).fill(null));

  const handleAnswerChange = (index, value) => {
    const newAnswers = [...answers];
    newAnswers[index] = value;
    setAnswers(newAnswers);
  };

  const handleSubmit = () => {
    let correctCount = 0;

    answers.forEach((answer, index) => {
      if (answer === questions[index].correctAnswer) {
        correctCount++;
      }
    });

    Alert.alert(`You got ${correctCount} out of ${questions.length} correct!`);
  };

  return (
      <ScrollView style={styles.container}>
        <Text style={styles.title}>Animal Quiz</Text>
        {questions.map((question, index) => (
            <View key={question.id} style={styles.questionContainer}>
              <Image source={question.image} style={styles.image} />
              <Text style={styles.questionText}>What animal is this?</Text>
              <RNPickerSelect
                  onValueChange={(value) => handleAnswerChange(index, value)}
                  items={question.options}
                  placeholder={{ label: 'Select an answer', value: null }}
                  style={pickerSelectStyles}
                  value={answers[index]} // Bind the selected answer
              />
            </View>
        ))}
        <TouchableOpacity style={styles.button} onPress={handleSubmit}>
          <Text style={styles.buttonText}>Submit Answers</Text>
        </TouchableOpacity>
      </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#f7f9fc',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
    paddingTop: 50,
    paddingBottom: 20,
  },
  questionContainer: {
    marginBottom: 20,
  },
  image: {
    width: '100%',
    height: 200,
    borderRadius: 10,
  },
  questionText: {
    fontSize: 18,
    marginVertical: 10,
    color: '#333',
  },
  button: {
    backgroundColor: '#007bff',
    borderRadius: 5,
    paddingVertical: 10,
    marginTop: 20,
    marginBottom: 20,
  },
  buttonText: {
    color: '#fff',
    textAlign: 'center',
    fontSize: 16,
  },
});

const pickerSelectStyles = StyleSheet.create({
  inputIOS: {
    fontSize: 16,
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    backgroundColor: '#fff',
    color: 'black',
    marginBottom: 20,
  },
  inputAndroid: {
    fontSize: 16,
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    backgroundColor: '#fff',
    color: 'black',
    marginBottom: 20,
  },
});
